digraph "IInputStream"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="IInputStream",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Represents an input stream."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="AByteBufferInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAByteBufferInputStream.html",tooltip="Converts a AByteBuffer to an IInputStream."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="AConcatInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAConcatInputStream.html",tooltip="Concatenates multiple sequential input streams into one."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ADynamicPipe",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classADynamicPipe.html",tooltip="An asynchronous buffer that converts an IInputStream to IOutputStream (and otherwise)."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="AFileInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAFileInputStream.html",tooltip="Opens a file for a binary read."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ALimitedInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classALimitedInputStream.html",tooltip="Input stream that will pass through a maximum of a certain number of bytes - then it will return eof ..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="APipe",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAPipe.html",tooltip="A thread safe buffer that converts an IInputStream to IOutputStream (and otherwise)."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ARandomInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classARandomInputStream.html",tooltip="An input stream that generates random bytes."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="AStringStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAStringStream.html",tooltip="A buffer input/output stream based on std::string."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ATcpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classATcpSocket.html",tooltip="A bidirectional TCP connection (either a client connection or returned by ATcpServerSocket)."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ISeekableInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classISeekableInputStream.html",tooltip="Represents an input stream with updating reading position."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="AStrongByteBufferInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAStrongByteBufferInputStream.html",tooltip="Input stream based on AByteBuffer with memory control, clears byte buffer on destruction."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="PipeInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPipeInputStream.html",tooltip=" "];
}
